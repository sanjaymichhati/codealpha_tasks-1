# Disease Prediction from Medical Data using ML

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix


# Load and Prepare Dataset

def load_dataset(filepath):
    data = pd.read_csv(filepath)
    print("Initial Data Shape:", data.shape)

    # Separate features and labels
    X = data.drop('disease', axis=1)
    y = data['disease']

    # Encode categorical columns
    for column in X.columns:
        if X[column].dtype == 'object':
            X[column] = LabelEncoder().fit_transform(X[column])

    y = LabelEncoder().fit_transform(y)

    scaler = StandardScaler()
    X_scaled = scaler.fit_transform(X)

    return train_test_split(X_scaled, y, test_size=0.2, random_state=42)


# Train Classifier

def train_model(X_train, y_train):
    model = RandomForestClassifier(n_estimators=100, random_state=42)
    model.fit(X_train, y_train)
    return model


# Evaluate the Model

def evaluate_model(model, X_test, y_test):
    predictions = model.predict(X_test)
    acc = accuracy_score(y_test, predictions)
    print("Accuracy: {:.2f}%".format(acc * 100))
    print("\nClassification Report:\n", classification_report(y_test, predictions))
    print("\nConfusion Matrix:\n", confusion_matrix(y_test, predictions))


# Main Entry

if __name__ == "__main__":
    dataset_path = "medical_data.csv"  # Replace with your dataset CSV path
    X_train, X_test, y_train, y_test = load_dataset(dataset_path)
    model = train_model(X_train, y_train)
    evaluate_model(model, X_test, y_test)
